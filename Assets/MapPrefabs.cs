using UnityEngine;
using System.Collections;

public class MapPrefabs : MonoBehaviour {
  MapObject[,] Hub0()
  {
    char[,] intMap = new char[,] {
//     0                   4                   8                  12                  16                  20             23
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' }, //0
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' }, //4
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' }, //8
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' }, //12
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '1', '1', '1', '1', '1', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '1', '0', '0', '0', '1', '1', '1', '1', '*', '*', '*', '*', '*', '*', '*', '*' }, //16
    { '*', '*', '*', '*', '*', '*', '*', '*', '1', '0', '0', '0', '0', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '1', '0', '0', '0', '0', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '1', '1', '0', '1', '1', '1', '1', '1', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' }, //20
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' },
    { '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*' }, //23
    };
    MapObject[,] map = new MapObject[intMap.GetLength(0), intMap.GetLength(1)];

    for (int i = 0; i < intMap.GetLength(0); i++)
    {
      for (int j = 0; j < intMap.GetLength(1); j++)
      {
        MapObject newTile;
        switch (intMap[i, j])
        {
          case '1':
            newTile = Tile(1, 0, 0);
            break;

          case '0':
            newTile = Tile(-1, 0, 0);
            break;

          case '*':
          default:
            newTile = Tile(0, 0, 0);
            break;

        }
        map[i, j] = newTile;
      }
    }
    return map;
  }

  MapObject Tile(int _type, int _subtype, int _height) //shortcut for "new MapObject()"
  {
    return new MapObject(_type, _subtype, _height);
  }
}
